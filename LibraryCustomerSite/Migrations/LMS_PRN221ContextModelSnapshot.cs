// <auto-generated />
using System;
using LibraryCustomerSite.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryCustomerSite.Migrations
{
    [DbContext(typeof(LMS_PRN221Context))]
    partial class LMS_PRN221ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BorrowDetail", b =>
                {
                    b.Property<int>("Oid")
                        .HasColumnType("int");

                    b.Property<string>("Bid")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Oid", "Bid")
                        .HasName("PK__BorrowDe__47535E2D6C560374");

                    b.HasIndex("Bid");

                    b.ToTable("BorrowDetail", (string)null);
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.Blog", b =>
                {
                    b.Property<int>("Bid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bid"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Uid")
                        .HasColumnType("int");

                    b.HasKey("Bid")
                        .HasName("PK__Blog__C6D111C94B0FC716");

                    b.HasIndex("Uid");

                    b.ToTable("Blog", (string)null);
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.BookCopy", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("BookTitleId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BookTitleId");

                    b.ToTable("BookCopy", (string)null);
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.BookTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Bname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BName");

                    b.Property<int?>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CId");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("UnitInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cid");

                    b.HasIndex("PublisherId");

                    b.ToTable("BookTitle", (string)null);
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.BorrowInformation", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Oid"), 1L, 1);

                    b.Property<DateTime?>("BorrowDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckoutDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("Uid")
                        .HasColumnType("int");

                    b.HasKey("Oid")
                        .HasName("PK__BorrowIn__CB3E4F31CC88F981");

                    b.HasIndex("Uid");

                    b.ToTable("BorrowInformation", (string)null);
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CName");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Bid")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("Uid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Bid");

                    b.HasIndex("Uid");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PasswordResetTokens");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Pname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PName");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Publisher", (string)null);
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.User", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Uid"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Uid")
                        .HasName("PK__User__C5B69A4AF284BAF6");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D105349423F8FA")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Uid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("Wishlist", (string)null);
                });

            modelBuilder.Entity("WishlistItem", b =>
                {
                    b.Property<int>("Wid")
                        .HasColumnType("int")
                        .HasColumnName("WId");

                    b.Property<string>("Bid")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BId");

                    b.HasKey("Wid", "Bid")
                        .HasName("PK__Wishlist__D75A85F56E13CFE3");

                    b.HasIndex("Bid");

                    b.ToTable("WishlistItem", (string)null);
                });

            modelBuilder.Entity("BorrowDetail", b =>
                {
                    b.HasOne("LibraryCustomerSite.Models.BookCopy", null)
                        .WithMany()
                        .HasForeignKey("Bid")
                        .IsRequired()
                        .HasConstraintName("FK__BorrowDetai__Bid__571DF1D5");

                    b.HasOne("LibraryCustomerSite.Models.BorrowInformation", null)
                        .WithMany()
                        .HasForeignKey("Oid")
                        .IsRequired()
                        .HasConstraintName("FK__BorrowDetai__Oid__5629CD9C");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.Blog", b =>
                {
                    b.HasOne("LibraryCustomerSite.Models.User", "UidNavigation")
                        .WithMany("Blogs")
                        .HasForeignKey("Uid")
                        .HasConstraintName("FK__Blog__Uid__59FA5E80");

                    b.Navigation("UidNavigation");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.BookCopy", b =>
                {
                    b.HasOne("LibraryCustomerSite.Models.BookTitle", "BookTitle")
                        .WithMany("BookCopies")
                        .HasForeignKey("BookTitleId")
                        .HasConstraintName("FK__BookCopy__BookTi__45F365D3");

                    b.Navigation("BookTitle");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.BookTitle", b =>
                {
                    b.HasOne("LibraryCustomerSite.Models.Category", "CidNavigation")
                        .WithMany("BookTitles")
                        .HasForeignKey("Cid")
                        .HasConstraintName("FK__BookTitle__CId__412EB0B6");

                    b.HasOne("LibraryCustomerSite.Models.Publisher", "Publisher")
                        .WithMany("BookTitles")
                        .HasForeignKey("PublisherId")
                        .HasConstraintName("FK__BookTitle__Publi__4316F928");

                    b.Navigation("CidNavigation");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.BorrowInformation", b =>
                {
                    b.HasOne("LibraryCustomerSite.Models.User", "UidNavigation")
                        .WithMany("BorrowInformations")
                        .HasForeignKey("Uid")
                        .HasConstraintName("FK__BorrowInfor__Uid__534D60F1");

                    b.Navigation("UidNavigation");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.Feedback", b =>
                {
                    b.HasOne("LibraryCustomerSite.Models.BookTitle", "BidNavigation")
                        .WithMany("Feedbacks")
                        .HasForeignKey("Bid")
                        .HasConstraintName("FK__Feedback__Bid__48CFD27E");

                    b.HasOne("LibraryCustomerSite.Models.User", "UidNavigation")
                        .WithMany("Feedbacks")
                        .HasForeignKey("Uid")
                        .HasConstraintName("FK__Feedback__Uid__49C3F6B7");

                    b.Navigation("BidNavigation");

                    b.Navigation("UidNavigation");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.User", b =>
                {
                    b.HasOne("LibraryCustomerSite.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__User__RoleId__3A81B327");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.Wishlist", b =>
                {
                    b.HasOne("LibraryCustomerSite.Models.User", "UidNavigation")
                        .WithMany("Wishlists")
                        .HasForeignKey("Uid")
                        .HasConstraintName("FK__Wishlist__Uid__4CA06362");

                    b.Navigation("UidNavigation");
                });

            modelBuilder.Entity("WishlistItem", b =>
                {
                    b.HasOne("LibraryCustomerSite.Models.BookCopy", null)
                        .WithMany()
                        .HasForeignKey("Bid")
                        .IsRequired()
                        .HasConstraintName("FK__WishlistIte__BId__5070F446");

                    b.HasOne("LibraryCustomerSite.Models.Wishlist", null)
                        .WithMany()
                        .HasForeignKey("Wid")
                        .IsRequired()
                        .HasConstraintName("FK__WishlistIte__WId__4F7CD00D");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.BookTitle", b =>
                {
                    b.Navigation("BookCopies");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.Category", b =>
                {
                    b.Navigation("BookTitles");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.Publisher", b =>
                {
                    b.Navigation("BookTitles");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryCustomerSite.Models.User", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("BorrowInformations");

                    b.Navigation("Feedbacks");

                    b.Navigation("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
