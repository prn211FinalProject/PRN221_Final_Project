@page
@model LibraryCustomerSite.Pages.Books.DetailsModel

@{
    ViewData["Title"] = "Details";
}


<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Detail</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
    <script src="~/js/site.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .product-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
        }

        /* Product Images */
        .product-images {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .main-image {
            width: 100%;
            aspect-ratio: 1;
            object-fit: cover;
            border-radius: 8px;
        }

        .thumbnail-grid {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            gap: 10px;
        }

        .thumbnail {
            width: 100%;
            aspect-ratio: 1;
            object-fit: cover;
            border-radius: 4px;
            cursor: pointer;
        }

        /* Product Info */
        .product-info {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .badge-favorite {
            display: inline-block;
            background-color: #ee4d2d;
            color: white;
            padding: 3px 8px;
            border-radius: 4px;
            font-size: 12px;
            margin-bottom: 8px;
        }

        .product-title {
            font-size: 20px;
            font-weight: bold;
            line-height: 1.4;
        }

        .rating-section {
            display: flex;
            align-items: center;
            gap: 15px;
            margin: 10px 0;
        }

        .stars {
            color: #ee4d2d;
            font-size: 14px;
        }

        .review-count {
            color: #666;
        }

        .report-link {
            color: #ee4d2d;
            text-decoration: none;
            margin-left: auto;
        }

        .price-card {
            background-color: #fafafa;
            /* padding: 15px; */
            border-radius: 8px;
            margin: 15px 0;
        }

        .current-price {
            color: #ee4d2d;
            font-size: 24px;
            font-weight: bold;
        }

        .original-price {
            color: #666;
            text-decoration: line-through;
            margin-left: 10px;
        }

        .discount-badge {
            background-color: #fff0f0;
            color: #ee4d2d;
            padding: 2px 6px;
            border-radius: 4px;
            font-size: 12px;
            margin-left: 10px;
        }

        .info-row {
            display: flex;
            gap: 15px;
            margin: 15px 0;
            font-size: 14px;
        }

        .info-label {
            width: 110px;
            color: #666;
        }

        .shipping-badge {
            background-color: #00bfa5;
            color: white;
            padding: 3px 8px;
            border-radius: 4px;
            font-size: 12px;
        }

        .location-select {
            padding: 5px 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: white;
            cursor: pointer;
        }

        .color-options {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 10px;
        }

        .color-option {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            cursor: pointer;
        }

        .color-option img {
            width: 40px;
            height: 40px;
            object-fit: cover;
            border-radius: 4px;
        }

        .action-buttons {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        .btn {
            flex: 1;
            padding: 12px 20px;
            border-radius: 4px;
            border: none;
            cursor: pointer;
            font-weight: bold;
        }

        .btn-outline {
            background-color: white;
            border: 1px solid #ee4d2d;
            color: #ee4d2d;
        }

        .btn-primary {
            background-color: #ee4d2d;
            color: white;
        }
        .btn-secondaryy {
            background-color: blue;
            color: white;
        }

        #ecb21f;
        border-color: #a88734 #9c7e31 #846a29;
        color: black;
        border-width: 1px;
        border-style: solid;
        border-radius: 13px;
        }

        #profile {
            background-color: unset;
        }

        #post {
            margin: 10px;
            padding: 6px;
            padding-top: 2px;
            padding-bottom: 2px;
            text-align: center;
            background-color: #ecb21f;
            border-color: #a88734 #9c7e31 #846a29;
            color: black;
            border-width: 1px;
            border-style: solid;
            border-radius: 13px;
            width: 50%;
        }
        #nav-items li a, #profile {
            text-decoration: none;
            color: rgb(224, 219, 219);
            background-color: black;
        }


        .comments {
            margin-top: 5%;
            margin-left: 20px;
        }

        .darker {
            border: 1px solid #ecb21f;
            background-color: black;
            float: right;
            border-radius: 5px;
            padding-left: 40px;
            padding-right: 30px;
            padding-top: 10px;
        }

        .comment {
            border: 1px solid rgba(16, 46, 46, 1);
            background-color: rgba(16, 46, 46, 0.973);
            float: left;
            border-radius: 5px;
            padding-left: 40px;
            padding-right: 30px;
            padding-top: 10px;
        }

            .comment h4, .comment span, .darker h4, .darker span {
                display: inline;
            }

            .comment p, .comment span, .darker p, .darker span {
                color: rgb(184, 183, 183);
            }

        h1, h4 {
            color: white;
            font-weight: bold;
        }

        label {
            color: rgb(212, 208, 208);
        }

        #align-form {
            margin-top: 20px;
        }

        .form-group p a {
            color: white;
        }

        #checkbx {
            background-color: black;
        }

        #darker img {
            margin-right: 15px;
            position: static;
        }

        .form-group input, .form-group textarea {
            background-color: black;
            border: 1px solid rgba(16, 46, 46, 1);
            border-radius: 12px;
        }

        form {
            border: 1px solid rgba(16, 46, 46, 1);
            background-color: rgba(16, 46, 46, 0.973);
            border-radius: 5px;
            /* padding: 20px; */
        }
    </style>
</head>
<body>
    <button class="btn btn-primary">
        <a style="color: white; text-decoration: none;" href="/Books">Quay về</a>
    </button>
    <div class="container">
        <div class="product-grid">
            <!-- Product Images -->
            <div class="product-images">
                <img src="~/images/@Model.Book.Image" alt="@Model.Book.Bname" class="main-image">
            </div>
            <!-- Product Info -->
            <div class="product-info">
                <div>
                    <span class="badge-favorite">Yêu Thích</span>
                    <h1 class="product-title">Tên sách: @Model.Book.Bname</h1>
                    <p>Tác giả: @Model.Book.Author</p>
                    <p>Mô tả: @Model.Book.Description</p>
                    <div>Ngày xuất bản: @(Model.Book.PublishDate.HasValue ? Model.Book.PublishDate.Value.ToString("dd/MM/yyyy") : "N/A")</div>
                    <div class="rating-section">
                    </div>
                </div>
                <div class="info-row">
                    <span class="info-label">Số lượng còn lại: </span>
                    <div>
                        <span>@Model.Book.UnitInStock</span>
                    </div>
                </div>

                <div class="info-row">
                    <span class="info-label">Trạng thái:</span>
                    <div>
                        @if (Model.Book.UnitInStock >= 1)
                        {
                            <span class="shipping-badge">Còn Hàng</span>
                        }
                        else
                        {
                            <span style="color: red;">Hết Hàng</span>
                        }
                    </div>
                </div>
                <div class="action-buttons">
                    @if (string.IsNullOrEmpty(HttpContext.Session.GetString("UserEmail")))
                    {
                        <a href="/Books/SignUp">
                            <button class="btn btn-outline">Thêm vào WishList</button>
                        </a>
                        <a href="/Books/SignUp">
                            <button class="btn btn-primary">Mượn Ngay</button>
                        </a>
                    }
                    else
                    {
                        <form method="post" asp-page-handler="AddToWishlist">
                            <input type="hidden" name="id" value="@Model.Book.Id" />
                            <button type="submit" class="btn btn-outline">Thêm Vào WishList</button>
                        </form>
                        <form method="get" asp-page="/Books/Borrow" asp-page-handler="Post">
                            <input type="hidden" name="id" value="@Model.Book.Id" />
                            <button type="submit" class="btn btn-primary">Mượn Ngay</button>
                        </form>

                    }
                </div>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div id="success-message" style="display:none;">@TempData["SuccessMessage"]</div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div id="error-message" style="display:none;">@TempData["ErrorMessage"]</div>
    }
    <nav class="navbar navbar-expand-sm navbar-dark">
        <img src="https://i.imgur.com/CFpa3nK.jpg" width="20" height="20" class="d-inline-block align-top rounded-circle" alt="">
        <a class="navbar-brand ml-2" href="#" data-abc="true">Rib Simpson</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarColor02" aria-controls="navbarColor02" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="end">
            <div class="collapse navbar-collapse" id="navbarColor02">
                <ul class="navbar-nav">
                    <li class="nav-item"> <a class="nav-link" href="#" data-abc="true">Work</a> </li>
                    <li class="nav-item"> <a class="nav-link" href="#" data-abc="true">Capabilities</a> </li>
                    <li class="nav-item "> <a class="nav-link" href="#" data-abc="true">Articles</a> </li>
                    <li class="nav-item active"> <a class="nav-link mt-2" href="#" data-abc="true" id="clicked">Contact<span class="sr-only">(current)</span></a> </li>
                </ul>
            </div>
        </div>
    </nav>
    <!-- Main Body -->
    <section>
        <div class="container">
            <div class="row">
                <div class="col-sm-5 col-md-6 col-12 pb-4">
                    @foreach(var fb in Model.Feedback)
                    {
                    <h1>Comments</h1>
                    <div class="comment mt-4 text-justify float-left">
                        <img src="https://i.imgur.com/yTFUilP.jpg" alt="" class="rounded-circle" width="40" height="40">
                        <h4>@fb.UidNavigation.FullName</h4>
                            <span class="comment-time" data-created-date="@fb.CreatedDate?.ToString("o")">
                                @(fb.CreatedDate?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")
                            </span>
                        <br>
                        <p>@fb.Content</p>
                    </div>
                    }
                </div>
                <div class="col-lg-4 col-md-5 col-sm-4 offset-md-1 offset-sm-1 col-12 mt-4">
                    <form style="padding: 20px;" id="algin-form" method="post" asp-page-handler="AddFeedback" asp-route-id="@Model.Book.Id">
                        <div class="form-group">
                            <h4>Leave a comment</h4>
                            <label for="message">Message</label>
                            <textarea name="content" id="message" msg cols="30" rows="5" class="form-control"></textarea>
                        </div>
                        <div class="form-group">
                            <button type="submit" id="post" class="btn btn-primary">Post Comment</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var successMessage = document.getElementById("success-message");
            if (successMessage) {
                alert(successMessage.innerText);
            }

            var errorMessage = document.getElementById("error-message");
            if (errorMessage) {
                alert(errorMessage.innerText);
            }
        });
    </script>
    <script>
        function getTimeAgo(createdDate) {
            const now = new Date();
            const created = new Date(createdDate);
            const diff = Math.floor((now - created) / 1000); // tính số giây chênh lệch

            if (diff < 60) return "Just now";
            if (diff < 3600) return `${Math.floor(diff / 60)} minutes ago`;
            if (diff < 86400) return `${Math.floor(diff / 3600)} hours ago`;
            if (diff < 604800) return `${Math.floor(diff / 86400)} days ago`;
            if (diff < 2592000) return `${Math.floor(diff / 604800)} weeks ago`;
            if (diff < 31536000) return `${Math.floor(diff / 2592000)} months ago`;

            return `${Math.floor(diff / 31536000)} years ago`;
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const commentTimes = document.querySelectorAll(".comment-time");

            commentTimes.forEach(function (element) {
                const createdDate = element.getAttribute("data-created-date");
                element.textContent += " - " + getTimeAgo(createdDate);
            });
        });

    </script>
</body>
</html>
